# Fixed srcs/requirements/nginx/conf/default.conf
server {
    listen 443 ssl http2;
    server_name bjandri.42.fr localhost;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Adminer - Database management interface (SIMPLIFIED)
    location /adminer/ {
        # Strip the /adminer prefix and pass everything to the PHP file
        rewrite ^/adminer/(.*)$ /$1 break;
        
        # Always execute index.php for any request to /adminer/
        fastcgi_pass adminer:9001;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /var/www/html/index.php;
        fastcgi_param SCRIPT_NAME /adminer/index.php;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param HTTPS on;
        fastcgi_param SERVER_NAME $server_name;
    }

    # Static portfolio site (FIXED)
    location /portfolio/ {
        # Remove trailing slash from URL and proxy to static site
        rewrite ^/portfolio/(.*) /$1 break;
        
        proxy_pass http://static-site:8091/;  # Match the port from your static site
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle index files properly
        proxy_set_header X-Original-URI $request_uri;
    }

    # Handle direct access to adminer (without trailing slash)
    location = /adminer {
        return 301 /adminer/;
    }
    
    # Handle direct access to portfolio (without trailing slash)
    location = /portfolio {
        return 301 /portfolio/;
    }

    # Handle PHP files for WordPress (default behavior)
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass wordpress:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS on;
        fastcgi_param SERVER_NAME $server_name;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_connect_timeout 300;
    }

    # WordPress main site (default)
    root /var/www/html;
    index index.php index.html index.htm;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # WordPress admin
    location /wp-admin/ {
        try_files $uri $uri/ /wp-admin/index.php?$args;
    }

    # WordPress includes
    location /wp-includes/ {
        try_files $uri $uri/ =404;
    }

    # WordPress content
    location /wp-content/ {
        try_files $uri $uri/ =404;
    }

    # Prevent access to sensitive files
    location ~ /wp-config\.php$ {
        deny all;
    }

    location ~ /\.ht {
        deny all;
    }

    location ~ /\.(git|svn) {
        deny all;
    }

    # WordPress uploads security
    location ~* /wp-content/uploads/.*\.php$ {
        deny all;
    }

    # Static files caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Handle WordPress favicon and robots
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name bjandri.42.fr localhost;
    return 301 https://$server_name$request_uri;
}